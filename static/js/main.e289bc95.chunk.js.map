{"version":3,"sources":["MyForm/MyForm.js","MyTable/MyTable.js","App/App.js","reportWebVitals.js","index.js"],"names":["MyForm","onInputChange","type","onChange","event","target","value","TableHead","UserSearch","filter","useState","fetchResults","setFetchResults","filteredResults","setFilteredResults","useEffect","a","fetch","response","ok","json","userData","sortByName","results","slice","sort","b","console","log","name","last","status","fetchData","filterEmployeeByName","person","first","toString","toLowerCase","includes","length","map","result","id","login","uuid","src","picture","thumbnail","alt","title","email","cell","dob","date","age","MyTable","App","inputFilter","setInputFilter","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e289bc95.chunk.js","sourcesContent":["import './MyForm.css';\nimport { useState } from 'react';\n\nconst MyForm = ({onInputChange}) => {\n\n  // const [inputFilter, setInputFilter] = useState('');\n\n  const InputChange = (event) => {\n    // console.log(event.target.value);\n    onInputChange(event.target.value);\n  }\n\n  return (\n    <form>\n      <label>Filter Employees:</label>\n      <input type=\"text\" onChange={InputChange}/>\n    </form>\n  );\n}\n\nexport default MyForm;","import { useEffect, useState } from 'react';\nimport './MyTable.css';\n\nconst TableHead = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Photo</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Phone Number</th>\n        <th>DOB</th>\n        <th>Age</th>\n      </tr>\n    </thead>\n  )\n}\n\n\nconst UserSearch = ({ filter }) => {\n\n  // console.log('MyTable.js, UserSearch, filter =', filter);\n\n  const [fetchResults, setFetchResults] = useState([]);\n  const [filteredResults, setFilteredResults] = useState([]);\n\n  useEffect(() => {\n    // define the code\n    const fetchData = async () => {\n      const queryURL = 'https://randomuser.me/api/?results=50&nat=gb'\n      // console.log('UserSearch, queryURL =', queryURL);\n\n      const response = await fetch(queryURL);\n      if (response.ok) {\n        // console.log('UserSearch, fetch, response =', response);\n\n        \n        // call setResults here to put the results into state, to cause a re-render\n        const userData = await response.json();\n        const sortByName = userData.results.slice(0).sort(function(a,b){\n          console.log('a =',a.name.last);\n          if ( a.name.last < b.name.last ){\n            return -1;\n          }\n          if ( a.name.last > b.name.last ){\n            return 1;\n          }\n          return 0;\n        });\n        \n        console.log('UserSeach, userData =', userData); \n        console.log('UserSeach, sortName =', sortByName); \n        setFetchResults(sortByName);\n      } else {\n        console.log('fetch error', response.status);\n\n      }\n    }\n    // call it now to auto run - fetch data is a function! \n    fetchData();\n\n  }, []);\n  // what is the extra [] for ? - \n  // explicitly that there are no dependencies, we only want this to fire once, onMount.\n  // you can have it dependent on multiple things passd in to the array.\n\n  useEffect(() => {\n    \n    let filterEmployeeByName = fetchResults.filter((person) => {\n      let name = (`${person.name.first} ${person.name.last}`).toString().toLowerCase();\n      const condition = name.includes(filter);\n      return condition;\n    });\n    // console.log('MyTable, filterEmployeeByName =', filterEmployeeByName);\n    setFilteredResults(filterEmployeeByName);\n\n  }, [filter]);\n\n  // console.log('filteredResults.length !== 0', filteredResults.length !== 0 );\n\n  return (\n    <tbody>\n      {\n        (filteredResults.length !== 0)\n          ? (\n              filteredResults.map(result => (\n                <tr key={result.login.uuid} id={result.login.uuid}>\n                  <td><img src={result.picture.thumbnail} alt=\"employee image\" /></td>\n                  <td>{`${result.name.title} ${result.name.first} ${result.name.last}`}</td>\n                  <td>{result.email}</td>\n                  <td>{result.cell}</td>\n                  <td>{result.dob.date}</td>\n                  <td>{result.dob.age}</td>\n                </tr>\n              ))\n            )\n          : (\n              fetchResults.map(result => (\n                <tr key={result.login.uuid} id={result.login.uuid}>\n                  <td><img src={result.picture.thumbnail} alt=\"employee image\" /></td>\n                  <td>{`${result.name.title} ${result.name.first} ${result.name.last}`}</td>\n                  <td>{result.email}</td>\n                  <td>{result.cell}</td>\n                  <td>{result.dob.date}</td>\n                  <td>{result.dob.age}</td>\n                </tr>\n              ))\n            )\n      }\n\n    </tbody>\n  )\n}\n\n\nconst MyTable = ({ filter }) => {\n\n  // console.log('MyTable, filter =', filter);\n  return (\n    <table>\n      <TableHead />\n      <UserSearch filter={filter} />\n\n    </table>\n  );\n}\n\n\nexport default MyTable\n","import './App.css';\nimport { useState } from 'react';\nimport MyForm from '../MyForm/MyForm.js';\nimport MyTable from '../MyTable/MyTable.js';\n\nfunction App() {\n\n  const [inputFilter, setInputFilter] = useState('');\n\n  const handleInputChange = (value) => {\n    setInputFilter(value);\n    // console.log('App.js, value =',value);\n  }\n\n  return (\n    <div className=\"App\">\n      <MyForm onInputChange={handleInputChange}/>\n      <MyTable filter={inputFilter}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst Index = () => (\n    <App />\n);\n  \nReactDOM.render( <Index />, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}