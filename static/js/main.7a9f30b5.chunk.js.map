{"version":3,"sources":["MyForm/MyForm.js","MyTable/TableHead.js","MyTable/TableBody.js","MyCollapsible/CollapseContent.js","MyCollapsible/MyCollapsible.js","UserData/UserData.js","App/App.js","reportWebVitals.js","index.js"],"names":["MyForm","onInputChange","onSelectChange","onChangeFilter","sort","onReverse","filterBy","useState","field","setField","htmlFor","className","id","value","name","onChange","event","target","type","placeholder","src","process","alt","onClick","preventDefault","stopPropagation","TableHead","TableBody","showResults","filter","lastStateUsed","fetchResults","filteredResults","sortedResults","length","colSpan","map","result","login","uuid","picture","thumbnail","title","first","last","email","cell","dob","date","age","CollapseContent","person","console","log","activeState","setActiveState","contentHeight","setContentHeight","data","sortedAttr","setSortedAttr","content","useRef","useEffect","current","scrollHeight","ref","style","maxHeight","MyCollapsible","UserData","onRender","isTabletOrMobile","useMediaQuery","query","isFullScreen","setFetchResults","setFilteredResults","setSortedResults","a","fetch","response","ok","json","userData","sortByName","results","slice","b","forEach","formatDOB","status","fetchData","resultsToFilter","filterEmployeeByName","toString","toLowerCase","includes","filterEmployeeByAge","numericMonth","isNaN","filterFormat","substring","indexOf","parseInt","filterEmployeeByMonth","split","resultsToSort","sortedData","Date","reverse","App","inputFilter","setInputFilter","selectFilter","setSelectFilter","stateThatChanged","setStateThatChanged","reverseData","setReverseData","changeFilter","setChangeFilter","handleReverseData","state","input","select","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a9f30b5.chunk.js","sourcesContent":["import './MyForm.css';\nimport './MyForm-media.css';\nimport { useEffect, useState } from 'react';\n\nconst MyForm = ({ \n  onInputChange, \n  onSelectChange, \n  onChangeFilter, \n  sort, \n  onReverse, \n  filterBy\n}) => {\n\n  // const [inputFilter, setInputFilter] = useState('');\n  const [field, setField] = useState('Name');\n\n  const inputChange = (event) => {\n    // console.log(event.target.value);\n    onInputChange(event.target.value, 'filter');\n  }\n\n  const selectChange = (event) => {\n    onSelectChange(event.target.value, 'sort');\n  }\n\n  const changeFilter = (event) => {\n    onChangeFilter(event.target.value, 'filterBy');\n    // console.log(event.target.value);\n    if(event.target.value === 'name') {\n      setField('Name');\n    }\n    if(event.target.value === 'age') {\n      setField('Age');\n    }\n    if(event.target.value === 'dob') {\n      setField('Month');\n    }\n  }\n\n  const reverseButton = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    // console.log('click');\n    onReverse(true);\n  }\n\n  \n\n  return (\n    <form>\n      <label htmlFor='filter-text' >Filter Employees By:</label>\n      <label htmlFor='sort-category' className='hide'>Sort Employees:</label>\n      <select id=\"sort-filter\" value={filterBy} name=\"filter-by\" onChange={changeFilter}>\n        <option value=\"name\">Name</option>\n        <option value=\"dob\">DOB</option>\n        <option value=\"age\">Age</option>\n      </select>\n      <input id='filter-text' type=\"text\" onChange={inputChange} placeholder={`Search ${field}`} />\n\n      <label htmlFor='sort-category' className='hide'>Sort Employees:</label>\n      <select id=\"sort-category\" value={sort} name=\"sort-by\" onChange={selectChange}>\n        <option value=\"sortBy\">Sort By:</option>\n        <option value=\"age\">Age</option>\n        <option value=\"dob\">DOB</option>\n        <option value=\"name\">Name</option>\n      </select>\n\n      <button id='up-down' type=\"button\"><img src={`${process.env.PUBLIC_URL}/assets/img/up-down.png`} alt='up-down arrows' onClick={reverseButton} /></button>\n\n    </form>\n  );\n}\n\nexport default MyForm;","import { useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nconst TableHead = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Photo</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Phone Number</th>\n        <th>DOB</th>\n        <th>Age</th>\n      </tr>\n    </thead>\n  )\n}\n\nexport default TableHead;","import './MyTable.css';\nimport './MyTable-media.css';\n\n\nconst TableBody = ({\n  filter,\n  sort,\n  lastStateUsed,\n  fetchResults,\n  filteredResults,\n  sortedResults,\n}) => {\n\n  // console.log('MyTable.js, UserSearch, filter =', filter);\n  // console.log('MyTable.js, UserSearch, sort =', sort);\n  // console.log('MyTable.js, UserSearch, lastStateUsed =', lastStateUsed);\n  \n  // console.log('TableBody, sortedResults =', sortedResults);\n  // console.log('TableBody, filteredResults =', filteredResults);\n\n  // console.log('filteredResults.length !== 0', filteredResults.length !== 0 );\n  // console.log('sortedResults.length !== 0', sortedResults.length !== 0 );\n\n  let showResults;\n  if (lastStateUsed === 'filter' && filteredResults.length !== 0 || sort === 'sortBy' && filteredResults.length !== 0) {\n    showResults = filteredResults;\n  } else if (lastStateUsed === 'sort' && sortedResults.length !== 0 || sortedResults.length !== 0 && filteredResults.length === 0) {\n    showResults = sortedResults;\n  } else {\n    showResults = fetchResults;\n  }\n\n  if (filter.length !== 0 && filteredResults.length === 0) {\n    return (\n      <tbody>\n        <tr>\n          <td colSpan='6'>No Match, Try Again ...</td>\n        </tr>\n      </tbody>\n    )\n\n  } else {\n    return (\n      showResults.map(result => (\n        <tbody key={result.login.uuid} id={result.login.uuid}>\n          <tr>\n            <td><img src={result.picture.thumbnail} alt=\"employee image\" /></td>\n            <td>{`${result.name.title} ${result.name.first} ${result.name.last}`}</td>\n            <td>{result.email}</td>\n            <td>{result.cell}</td>\n            <td>{result.dob.date}</td>\n            <td>{result.dob.age}</td>\n          </tr>\n        </tbody>\n      ))\n    );\n  }\n\n}\n\nexport default TableBody;","import { useEffect, useRef, useState } from 'react';\n\nconst CollapseContent = ({person, sort}) => {\n\n  console.log('ColapseContent.js, UserSearch, sort =', sort);\n\n  const [activeState, setActiveState] = useState('');\n  const [contentHeight, setContentHeight] = useState('');\n  const [sortedAttr, setSortedAttr] = useState({ \n    title: '',\n    data: '',\n  });\n  \n  const content = useRef(null);\n\n  const toggelCollapse = () => {\n\n    setActiveState(activeState === '' ? 'active' : '');\n    // console.log(content.current.scrollHeight);\n\n    // if setActive is equal to active. If it is the function will change setHeight to 0px. \n    // Else, if it’s already 0px it will change to the value of the contentscrollHeight.\n    setContentHeight(\n      activeState === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`\n    );\n  }\n  \n  console.log('person.dob.age =', person.dob.age);\n  console.log('sortedAttr.title =', sortedAttr.title);\n\n  useEffect(()=> {\n    if(sort === 'age'){\n      setSortedAttr({ \n        title: 'Age',\n        data: person.dob.age,\n      })\n    } else if(sort === 'dob'){\n      setSortedAttr({ \n        title: 'DOB',\n        data: person.dob.date,\n      })\n    } else if(sort === 'sortBy' || '' || 'name') {\n      setSortedAttr({ \n        title: '',\n        data: '',\n      })\n    }\n  }, [sort]);\n\n  return (\n    <article>\n      <button className={`collapsible ${activeState}`} onClick={toggelCollapse}>\n        <span>{`${person.name.title} ${person.name.first} ${person.name.last}`}</span> \n        <span> {`${sortedAttr.title} ${sortedAttr.data}`} </span> \n      </button>\n      <div ref={content} style={{ maxHeight: `${contentHeight}` }} className=\"content\">\n        <img className='user-img' src={person.picture.thumbnail} alt=\"employee image\" />\n        <div>\n          <div className='info-item'>\n            <h3 className='info-heading'>Email:</h3>\n            <p className='user-info'>{person.email}</p>\n          </div>\n          <div className='info-item'>\n            <h3 className='info-heading'>Phone:</h3>\n            <p className='user-info'>{person.cell}</p>\n          </div>\n          <div className='info-item'>\n            <h3 className='info-heading'>DOB:</h3>\n            <p className='user-info'>{person.dob.date}</p>\n          </div>\n          <div className='info-item'>\n            <h3 className='info-heading'>Age:</h3>\n            <p className='user-info'>{person.dob.age}</p>\n          </div>\n        </div>\n      </div>\n    </article>\n  )\n\n}\n\nexport default CollapseContent;\n\n// REFERENCES\n\n// Brecton,H. (2019). Build a React Accordion Component from Scratch Using React Hooks. Medium. \n// https://medium.com/skillthrive/build-a-react-accordion-component-from-scratch-using-react-hooks-a71d3d91324b. \n// accessed(22.02.2021).","import { useEffect, useState } from 'react';\nimport './MyCollapsible.css';\nimport CollapseContent from './CollapseContent';\n\nconst MyCollapsible = ({\n  filter,\n  sort,\n  lastStateUsed,\n  fetchResults,\n  filteredResults,\n  sortedResults,\n}) => {\n\n  // console.log('MyTable.js, UserSearch, filter =', filter);\n  // console.log('MyTable.js, UserSearch, sort =', sort);\n  // console.log('MyTable.js, UserSearch, lastStateUsed =', lastStateUsed);\n\n  // console.log('sortedResults.length =', sortedResults);\n  // console.log('filteredResults.length =', filteredResults);\n\n  let showResults;\n  if (lastStateUsed === 'filter' && filteredResults.length !== 0 || sort === 'sortBy' && filteredResults.length !== 0) {\n    showResults = filteredResults;\n  } else if (lastStateUsed === 'sort' && sortedResults.length !== 0 || sortedResults.length !== 0 && filteredResults.length === 0) {\n    showResults = sortedResults;\n  } else {\n    showResults = fetchResults;\n  }\n\n  if (filter.length !== 0 && filteredResults.length === 0) {\n    return (\n      <div>\n          <p>No Match, Try Again ...</p>\n      </div>\n    )\n\n  } else {\n    return (\n      showResults.map(result => (\n        <CollapseContent person={result} sort={sort} key={result.login.uuid} id={result.login.uuid}/>\n      ))\n    );\n  }\n\n}\n\nexport default MyCollapsible;","import { useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\n\nimport TableHead from '../MyTable/TableHead';\nimport TableBody from '../MyTable/TableBody';\n\nimport MyCollapsible from '../MyCollapsible/MyCollapsible';\n\n\nconst UserData = ({ \n  filter, \n  sort, \n  lastStateUsed, \n  onReverse, \n  onRender, \n  filterBy \n}) => {\n\n  // console.log('MyTable.js, UserSearch, onReverse =', onReverse);\n  // console.log('MyTable.js, UserSearch, filterBy =', filterBy);\n\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 650px)' });\n  const isFullScreen = useMediaQuery({ query: '(min-width: 650px)' });\n\n  const [fetchResults, setFetchResults] = useState([]);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [sortedResults, setSortedResults] = useState([]);\n\n  useEffect(() => {\n    // define the code\n    const fetchData = async () => {\n      const queryURL = 'https://randomuser.me/api/?results=10&nat=gb'\n      // console.log('UserSearch, queryURL =', queryURL);\n\n      const response = await fetch(queryURL);\n      if (response.ok) {\n        // console.log('UserSearch, fetch, response =', response);\n\n\n        // call setResults here to put the results into state, to cause a re-render\n        const userData = await response.json();\n        const sortByName = userData.results.slice(0).sort(function (a, b) {\n\n          if (a.name.last < b.name.last) {\n            return -1;\n          }\n          if (a.name.last > b.name.last) {\n            return 1;\n          }\n          return 0;\n        });\n        // format DOB\n        userData.results.forEach(person => {\n          // console.log('dob =', person.dob.date.slice(0,10));\n          const formatDOB = person.dob.date.slice(0, 10);\n          person.dob.date = formatDOB;\n        });\n\n        // console.log('UserSeach, userData =', userData); \n        // console.log('UserSeach, sortName =', sortByName); \n        setFetchResults(sortByName);\n      } else {\n        console.log('fetch error', response.status);\n\n      }\n    }\n    // call it now to auto run - fetch data is a function! \n    fetchData();\n\n  }, []);\n  // what is the extra [] for ? - \n  // explicitly that there are no dependencies, we only want this to fire once, onMount.\n  // you can have it dependent on multiple things passd in to the array.\n\n  useEffect(() => {\n\n    let resultsToFilter;\n    if (sortedResults.length !== 0) {\n      resultsToFilter = sortedResults;\n    } else {\n      resultsToFilter = fetchResults;\n    }\n\n\n    if (filter === '') {\n\n      setFilteredResults([]);\n\n    } else if (filterBy === 'name') {\n      let filterEmployeeByName = resultsToFilter.filter((person) => {\n        let name = (`${person.name.first} ${person.name.last}`).toString().toLowerCase();\n        const condition = name.includes(filter);\n        return condition;\n      });\n      // console.log('MyTable, filterEmployeeByName =', filterEmployeeByName);\n      setFilteredResults(filterEmployeeByName);\n\n    } else if (filterBy === 'age') {\n      let filterEmployeeByAge = resultsToFilter.filter((person) => {\n        let age = (person.dob.age).toString();\n        const condition = age.includes(filter);\n        return condition;\n      });\n      setFilteredResults(filterEmployeeByAge);\n\n    } else if (filterBy === 'dob') {\n      let numericMonth;\n      // console.log('isNotANumber', isNaN(filter));\n      if (isNaN(filter)) {\n        const month = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\n        const filterFormat = filter.substring(0, 3).toLowerCase();\n        numericMonth = month.indexOf(filterFormat) + 1;\n      } else {\n        numericMonth = parseInt(filter);\n\n      }\n\n\n      let filterEmployeeByMonth = resultsToFilter.filter((person) => {\n        const dob = (person.dob.date).toString().split('-');\n        const month = parseInt(dob[1]);\n        // console.log('month', month);\n        const condition = month === numericMonth;\n        // console.log('condition =', condition);\n        return condition;\n      });\n      setFilteredResults(filterEmployeeByMonth);\n\n    }\n\n  }, [filter, filterBy]);\n\n  useEffect(() => {\n\n    let resultsToSort;\n    if (filteredResults.length !== 0) {\n      resultsToSort = filteredResults;\n    } else {\n      resultsToSort = fetchResults;\n    }\n\n    let sortedData;\n    switch (sort) {\n      case 'age':\n        sortedData = resultsToSort.slice(0).sort(function (a, b) {\n          return a.dob.age - b.dob.age;\n        });\n        // console.log(sortedData);\n        setSortedResults(sortedData);\n        break;\n      case 'dob':\n        sortedData = resultsToSort.slice(0).sort(function (a, b) {\n          return new Date(a.dob.date) - new Date(b.dob.date);\n        });\n        // console.log(sortedData);\n        setSortedResults(sortedData);\n        break;\n      case 'name':\n        sortedData = resultsToSort.slice(0).sort(function (a, b) {\n          if (a.name.last < b.name.last) {\n            return -1;\n          }\n          if (a.name.last > b.name.last) {\n            return 1;\n          }\n          return 0;\n        });\n        setSortedResults(sortedData);\n        break;\n      case 'sortBy':\n        setSortedResults([]);\n        break;\n    }\n\n  }, [sort]);\n\n  useEffect(() => {\n\n    if (onReverse === false){\n      return\n    } else if (lastStateUsed === 'filter') {\n      setFilteredResults(filteredResults.reverse());\n      return onRender(false);\n    } else if (lastStateUsed === 'sort') {\n      setSortedResults(sortedResults.reverse());\n      return onRender(false);\n    } else {\n      setFetchResults(fetchResults.reverse());\n      return onRender(false);\n    }\n\n  }, [onReverse, lastStateUsed]);\n\n  // console.log('MyTable, filter =', filter);\n  return (\n    <div id='wrapper'>\n      {isFullScreen && \n        <table>\n          <TableHead />\n          <TableBody\n            filter = {filter}\n            sort = {sort}\n            lastStateUsed = {lastStateUsed}\n            fetchResults = {fetchResults}\n            filteredResults = {filteredResults}\n            sortedResults = {sortedResults}\n          />\n        </table>\n      }\n      {isTabletOrMobile && \n        <div className='collapsible-container'> \n          <MyCollapsible \n            filter = {filter}\n            sort = {sort}\n            lastStateUsed = {lastStateUsed}\n            fetchResults = {fetchResults}\n            filteredResults = {filteredResults}\n            sortedResults = {sortedResults}\n          /> \n        </div>\n      }\n    </div>\n  );\n}\n\n\nexport default UserData;\n","import './App.css';\nimport { useState } from 'react';\nimport MyForm from '../MyForm/MyForm.js';\nimport UserData from '../UserData/UserData.js';\n\nfunction App() {\n\n  const [inputFilter, setInputFilter] = useState('');\n  const [selectFilter, setSelectFilter] = useState('');\n  const [stateThatChanged, setStateThatChanged] = useState('');\n  const [reverseData, setReverseData] = useState(false);\n  const [changeFilter, setChangeFilter] = useState('name');\n\n  const handleInputChange = (value, input) => {\n    setInputFilter(value);\n    setStateThatChanged(input);\n    // console.log('App.js, input, value =',value);\n    // console.log('App.js, input, input =',input);\n  }\n\n  const handleSelectChange = (value, select) => {\n    setSelectFilter(value);\n    setStateThatChanged(select);\n    // console.log('App.js, select, value =',value);\n    // console.log('App.js, select, select =',select);\n  }\n\n  const handleReverseData = (state) => {\n    // console.log('reverse state =', state);\n    setReverseData(state);\n  }\n\n  const handleChangeFilter = (value, select) => {\n    setChangeFilter(value);\n  }\n\n  return (\n    <div className=\"App\">\n      <MyForm \n      onInputChange={handleInputChange} \n      onSelectChange={handleSelectChange} \n      sort={selectFilter} \n      onReverse={handleReverseData} \n      filterBy={changeFilter} \n      onChangeFilter={handleChangeFilter}\n      />\n\n      <UserData \n      filter={inputFilter} \n      sort={selectFilter} \n      lastStateUsed={stateThatChanged} \n      onReverse={reverseData} \n      onRender={handleReverseData}\n      filterBy={changeFilter} \n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './index-media.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst Index = () => (\n    <App />\n);\n  \nReactDOM.render( <Index />, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}